// 32ビット整数の1ビットの数を数える関数
export function bitCount(n) {
  // 32ビット整数として扱うために符号なし右シフトを使う
  n = n >>> 0;
  let count = 0;
  while (n > 0) {
    // 最下位ビットが1かどうかチェックしてカウント
    count += n & 1;
    // 右に1ビットシフトして次のビットへ
    n = n >>> 1;
  }
  return count;
}

// >> は「符号（プラスかマイナスか）を考慮しながら右にシフト」
// >>> は「符号を無視してビットを右にずらし、左は常に0を入れる」
